{"name":"Github-auto-tools","tagline":"Python command line tool to clone all public repos and gists from a single github account, and populate empty new repos with a set of templated default files.","body":"github-clonetools\r\n=======================\r\nPython command line tool to clone all public repos and gists from a single github account,\r\nand populate empty new repos with a set of templated common default files.\r\n    \r\n# Installation:\r\nDeveloped for Python 2.7x work, though it may work for other distributions.\r\n\r\nTo install, run `python setup.py build install`\r\n\r\n# Usage:\r\n\r\nThe `setup.py` file installs three command line scripts into your python scripts directory.\r\n\r\n- `clonerepos [username] [directory]` clones all public github repos from github user \r\n`username` into directory `directory`.\r\nIf a directory is given but doesn't exist, it will be created.\r\nIf no directory is given, the repos are cloned into the current working directory.\r\nIf a subdirectory already exists that matches the name of a repo, that repo is skipped. \r\n\r\n- `clonegists [username] [directory]` clones all public github gists from github user \r\n`username` into directory `directory`. \r\nIf a directory is given but doesn't exist, it will be created.\r\nAn empty Wing IDE project file will be created at the root of this directory.\r\nThe directories are named according to the first file in a gist. If no directory is given, \r\nthe repos are cloned into the current working directory.\r\nIf a subdirectory already exists that matches the name of a gist, that gist is skipped. \r\n\r\n- `cloneall [username] [repo directory] [gists directory]` clones all public github \r\nrepos and gists from github user `username` into directories `repo directory` \r\nand `gists directory`, respectively.\r\nIf these directories are given but don't exist, they will be created.\r\nIf no directories are given, all repos and gists are cloned into the current working directory.\r\nIf a subdirectory already exists that matches the name of a repo or gist, that repo or gist is skipped. \r\n\r\n# Files generated for empty repos: \r\nWhen an empty repo is cloned using either the `clonerepos` or `cloneall` script,\r\nthe directory is automatically populated with a set of templated default files. These include:\r\n\r\n- `.gitignore`\r\n- `README.md`\r\n- `LICENSE.txt`\r\n\r\nAdditionally, for empty projects with the word \"python\" in the description:\r\n\r\n- A templated `setup.py` file, pointing to a created `src/` directory\r\n- An empty `src/__init__.py` file\r\n- an empty Wing IDE project file\r\n\r\nThese files can be templated with repo-specifc information (or however else you'd like) using the methods in\r\n`github_clonetools/default_files.py`.\r\nIndividual default files can be added/removed to the script behavior by editing\r\nthe method `write_default_files` in `github_clonetools/clonetools.py`.\r\n\r\nThis behavior can be tested using any empty repo. I use https://github.com/thearn/test-empty-repo for this purpose.\r\n\r\n# Examples:\r\n\r\nTo clone all of github user thearn's public gists and repos into the current directory:\r\n```bash\r\n$ cloneall thearn\r\n```\r\n\r\nTo clone all github user thearn's public gists and repos into the separate `thearn_repos` and `thearn_gists` directories:\r\n```bash\r\n$ cloneall thearn thearn_repos thearn_gists\r\n```\r\n\r\nTo clone all of github user thearn's public repos into a directory named `thearn_repos`:\r\n```bash\r\n$ clonerepos thearn thearn_repos\r\n```\r\n\r\nTo clone all of github user thearn's public gists into a directory named `thearn_gists`:\r\n```bash\r\n$ clonegists thearn thearn_gists\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}